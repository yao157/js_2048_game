{"version":3,"sources":["scripts/main.js"],"names":["tableBody","document","querySelector","scoreField","restartButton","createElement","messageStart","messageLose","messageWin","classList","add","textContent","board","lastBoardState","rows","length","cells","score","matrix","children","map","row","setGame","startButton","replaceWith","getRandomCell","render","findEmptyCell","y","x","randomNumber","emptyCells","forEach","rowIndex","cell","cellIndex","push","Math","floor","random","slideHorizontally","direction","newRow","filter","unshift","slice","toMerge","check","toUpdateBoard","slideVertically","newClmnDirection","elem","JSON","stringify","toUpdateCell","cellMerged","rowMerged","parse","currentCell","innerText","some","includes","remove","flat","adjacentCellsAvailable","cellValue","addEventListener","e","preventDefault","target","code","touch","touches","touchX","clientX","touchY","clientY","dataset","deltaX","changedTouches","deltaY","abs"],"mappings":"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","file":"main.c3090f9e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableBody = document.querySelector('tbody');\nconst scoreField = document.querySelector('.game-score');\n\nconst restartButton = document.createElement('button');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nrestartButton.classList.add('button');\nrestartButton.classList.add('restart');\nrestartButton.textContent = ('Restart');\n\nconst rows = tableBody.rows.length;\nconst cells = rows;\nlet board;\nlet lastBoardState;\nlet score = 0;\n\nconst matrix = [...tableBody.children].map(row => [...row.children]);\n\nfunction setGame() {\n  startButton.replaceWith(restartButton);\n\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n\n  getRandomCell();\n  getRandomCell();\n\n  render();\n}\n\nfunction getRandomCell() {\n  const [y, x] = findEmptyCell();\n\n  board[y][x] = randomNumber();\n}\n\nfunction findEmptyCell() {\n  const emptyCells = [];\n\n  board.forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      if (cell === 0) {\n        emptyCells.push([rowIndex, cellIndex]);\n      }\n    });\n  });\n\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\n\nconst startButton = document.querySelector('.start');\n\nfunction randomNumber() {\n  return Math.random() >= 0.9 ? 4 : 2;\n}\n\nfunction slideHorizontally(direction) {\n  for (let row = 0; row < rows; row++) {\n    const newRow = board[row].filter(cell => cell !== 0);\n\n    if (newRow.length !== 4) {\n      if (direction === 'right') {\n        do {\n          newRow.unshift(0);\n        } while (newRow.length < 4);\n      } else {\n        do {\n          newRow.push(0);\n        } while (newRow.length < 4);\n      }\n    }\n    board.push(newRow);\n  }\n\n  board = board.slice(-4);\n\n  toMerge(direction);\n\n  check();\n\n  toUpdateBoard();\n}\n\nfunction slideVertically(direction) {\n  for (let row = 0; row < rows; row++) {\n    const newRow = [];\n\n    for (let cell = 0; cell < cells; cell++) {\n      newRow.push(board[cell][row]);\n    }\n\n    const newClmnDirection = newRow.filter(elem => elem !== 0);\n\n    if (newClmnDirection.length !== cells) {\n      if (direction === 'down') {\n        do {\n          newClmnDirection.unshift(0);\n        } while (newClmnDirection.length < cells);\n      } else {\n        do {\n          newClmnDirection.push(0);\n        } while (newClmnDirection.length < cells);\n      }\n    }\n\n    for (let cell = 0; cell < cells; cell++) {\n      board[cell][row] = newClmnDirection[cell];\n    }\n  }\n\n  toMerge(direction);\n  check();\n  toUpdateBoard();\n}\n\nfunction toUpdateBoard() {\n  if (JSON.stringify(lastBoardState) !== JSON.stringify(board)) {\n    getRandomCell();\n  }\n  render();\n}\n\nfunction toUpdateCell([row, cell], [cellMerged, rowMerged]) {\n  lastBoardState = JSON.parse(JSON.stringify(board));\n\n  board[row][cell] *= 2;\n  board[rowMerged][cellMerged] = 0;\n\n  score += board[row][cell];\n}\n\nfunction toMerge(direction) {\n  if (direction === 'left' || direction === 'right') {\n    board.forEach((row, rowIndex) => {\n      row.forEach((cell, cellIndex) => {\n        if (direction === 'left' && cell === row[cellIndex + 1] && cell > 0) {\n          toUpdateCell([rowIndex, cellIndex], [cellIndex + 1, rowIndex]);\n        }\n\n        if (direction === 'right' && cell === row[cellIndex - 1] && cell > 0) {\n          toUpdateCell([rowIndex, cellIndex], [cellIndex - 1, rowIndex]);\n        }\n      });\n    });\n  }\n\n  if (direction === 'down' || direction === 'up') {\n    if (direction === 'down') {\n      for (let row = rows - 1; row > 0; row--) {\n        for (let cell = 0; cell < cells; cell++) {\n          const currentCell = board[row][cell];\n\n          if (currentCell === board[row - 1][cell] && currentCell > 0) {\n            toUpdateCell([row, cell], [cell, row - 1]);\n          }\n        }\n      }\n    }\n\n    if (direction === 'up') {\n      for (let row = 0; row < rows - 1; row++) {\n        for (let cell = 0; cell < cells; cell++) {\n          const currentCell = board[row][cell];\n\n          if (currentCell === board[row + 1][cell] && currentCell > 0) {\n            toUpdateCell([row, cell], [cell, row + 1]);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction render() {\n  board.forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      const elem = matrix[rowIndex][cellIndex];\n\n      scoreField.textContent = score;\n\n      elem.classList = 'field-cell';\n\n      if (cell === 0) {\n        elem.innerText = '';\n      } else {\n        elem.innerText = cell;\n        elem.classList.add(`field-cell--${cell}`);\n      }\n    });\n  });\n\n  lastBoardState = JSON.parse(JSON.stringify(board));\n}\n\nfunction check() {\n  if (board.some(row => row.includes(2048))) {\n    messageWin.classList.remove('hidden');\n  } else if (!board.flat().includes(0) && !adjacentCellsAvailable()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction adjacentCellsAvailable() {\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < cells; cell++) {\n      const cellValue = board[row][cell];\n\n      if ((cell < cells - 1 && board[row][cell + 1] === cellValue)\n        || (row < rows - 1 && board[row + 1][cell] === cellValue)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\ndocument.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  if (e.target === startButton || e.target === restartButton) {\n    setGame();\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  e.preventDefault();\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideHorizontally('left');\n      break;\n    case 'ArrowRight':\n      slideHorizontally('right');\n      break;\n    case 'ArrowUp':\n      slideVertically('up');\n      break;\n    case 'ArrowDown':\n      slideVertically('down');\n      break;\n    default:\n      break;\n  }\n});\n\ndocument.addEventListener('touchstart', (e) => {\n  e.preventDefault();\n\n  const touch = e.touches[0];\n  const touchX = touch.clientX;\n  const touchY = touch.clientY;\n\n  e.target.dataset.touchX = touchX;\n  e.target.dataset.touchY = touchY;\n});\n\ndocument.addEventListener('touchend', (e) => {\n  e.preventDefault();\n\n  const touchX = e.target.dataset.touchX;\n  const touchY = e.target.dataset.touchY;\n\n  const deltaX = touchX - e.changedTouches[0].clientX;\n  const deltaY = touchY - e.changedTouches[0].clientY;\n\n  if (Math.abs(deltaX) > Math.abs(deltaY)) {\n    if (deltaX > 0) {\n      slideHorizontally('left');\n    } else {\n      slideHorizontally('right');\n    }\n  } else {\n    if (deltaY > 0) {\n      slideVertically('up');\n    } else {\n      slideVertically('down');\n    }\n  }\n});\n"]}